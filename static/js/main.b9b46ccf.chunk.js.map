{"version":3,"sources":["EventModal.tsx","EventCard.tsx","Searchbar.tsx","LoginModal.tsx","Events.tsx","reportWebVitals.ts","index.tsx","htn_logo.png"],"names":["EventModal","_ref","id","setEventTypeFilter","closeParentModal","btnText","_React$useState","React","useState","_React$useState2","Object","slicedToArray","show","setShow","handleClose","handleShow","_React$useState3","name","event_type","start_time","end_time","speakers","private_url","related_events","_React$useState4","event","setEvent","_React$useState5","_React$useState6","relatedEvents","setRelatedEvents","useEffect","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","get","concat","then","res","data","map","eventId","catch","err","console","error","stop","apply","this","arguments","fetchEvent","react_default","createElement","Fragment","Button","variant","onClick","className","Modal","onHide","Body","Header","closeButton","description","ListGroup","speaker","Item","profile_pic","Image","src","alt","roundedCircle","fluid","thumbnail","width","height","logo","length","ev","key","public_url","href","EventCard","Card","style","cursor","Title","Text","size","src_EventModal_0","Searchbar","searchQuery","setSearchQuery","Form","action","method","Row","Col","sm","Group","Control","type","placeholder","value","onInput","e","target","LoginModal","email","password","setEmail","setPassword","controlId","Label","Footer","Events","events","loading","setLoading","eventReponse","setEvents","fetchEvents","constructor","Array","sort","b","search","window","location","query","URLSearchParams","filter","toLowerCase","includes","_React$useState7","_React$useState8","_React$useState9","_React$useState10","permission","_React$useState11","_React$useState12","eventTypeFilter","Navbar","bg","sticky","Container","Brand","Collapse","src_Searchbar","src_LoginModal","undefined","esm","color","xs","md","lg","i","src_EventCard_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_Events_0","document","getElementById","module","exports","p"],"mappings":"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","file":"static/js/main.b9b46ccf.chunk.js","sourcesContent":["import React from 'react';\nimport './EventModal.css';\nimport { TEvent, TEventType } from './Events';\nimport logo from './htn_logo.png';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from 'react-bootstrap/Image'\n\ninterface EventProps {\n  id: number;\n  setEventTypeFilter: React.Dispatch<React.SetStateAction<TEventType | undefined>>;\n  closeParentModal?: () => void;\n  btnText?: string;\n}\n\ntype RelatedEvent = {\n  eventId: number;\n  name: string;\n  show: boolean;\n};\n\nconst EventModal = ({ id, setEventTypeFilter, closeParentModal, btnText }: EventProps) => {\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n    if (closeParentModal) closeParentModal();\n  };\n  const handleShow = () => setShow(true);\n\n  const [event, setEvent] = React.useState<TEvent>({\n    id: 0,\n    name: '',\n    event_type: 'workshop',\n    start_time: 0,\n    end_time: 0,\n    speakers: [],\n    private_url: '',\n    related_events: []\n  });\n  const [relatedEvents, setRelatedEvents] = React.useState<RelatedEvent[]>([]);\n\n  React.useEffect(() => {\n    const fetchEvent = async () => {\n      axios.get(`https://api.hackthenorth.com/v3/events/${id}`)\n        .then((res) => {\n          let event: TEvent = res.data;\n          setEvent(event);\n          let relatedEvents: RelatedEvent[] = event.related_events.map((eventId) => {\n            let name = '';\n            axios.get(`https://api.hackthenorth.com/v3/events/${eventId}`)\n              .then((res) => {\n                name = res.data.name;\n              });\n            return { eventId: eventId, name: name, show: false };\n          });\n          setRelatedEvents(relatedEvents);\n        })\n        .catch(err => console.error(`Error: ${err}`));\n    }\n    fetchEvent();\n  }, []);\n\n  return (\n    <>\n      {btnText\n        ? <Button variant=\"primary\" onClick={handleShow} className='m-2'>\n          {btnText}\n        </Button>\n        : <Button variant=\"primary\" onClick={handleShow} className='m-2'>\n          {event.name}\n        </Button>}\n      <Modal show={show} onHide={handleClose} >\n        <Modal.Body>\n          <Modal.Header closeButton>{event.name}</Modal.Header>\n          <Modal.Body>{event.description}\n            {event.speakers &&\n              <>\n                <p className=\"bold\">Speakers:</p>\n                <ListGroup variant=\"flush\">\n                  {event.speakers.map((speaker) => {\n                    return (\n                      <ListGroup.Item>\n                        {speaker.profile_pic\n                          ? <Image src={speaker.profile_pic} alt={speaker.name} roundedCircle={true} fluid={true} thumbnail={true} width={100} height={100} />\n                          : <Image src={logo} alt={speaker.name} roundedCircle={true} fluid={true} width={100} height={100} />}\n                        <p>{speaker.name}</p>\n                      </ListGroup.Item>\n                    );\n                  })}\n                </ListGroup>\n              </>}\n            {event.related_events.length > 0 &&\n              <>\n                <p className='bold'>Related Events:</p>\n                <ListGroup variant=\"flush\">\n                  {relatedEvents.map((ev) => {\n                    return (\n                      <EventModal key={ev.eventId} id={ev.eventId} closeParentModal={handleClose} setEventTypeFilter={setEventTypeFilter} />\n                    );\n                  })}\n                </ListGroup>\n              </>}\n            {event.public_url &&\n              <Button href={event.public_url} variant=\"primary\" className='m-2'>Event link</Button>}\n            <Button href={event.private_url} variant=\"primary\" className='m-2'>Hacker link</Button>\n          </Modal.Body>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default EventModal;\n","import React from 'react';\nimport './EventCard.css';\nimport { TEvent, TEventType } from './Events';\nimport EventModal from './EventModal';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\ninterface EventProps {\n  key: number;\n  event: TEvent;\n  setEventTypeFilter: React.Dispatch<React.SetStateAction<TEventType | undefined>>;\n}\n\nconst EventCard = ({ event, setEventTypeFilter }: EventProps) => {\n  return (\n      <Card style={{ cursor: \"pointer\" }} className=\"mb-4\">\n        <Card.Body>\n          <Card.Title>{event.name}</Card.Title>\n          <Card.Text>{event.description}</Card.Text>\n          <div>\n          <Button onClick={() => setEventTypeFilter(event.event_type)} size=\"sm\" variant=\"outline-info\" className='mb-2'>{event.event_type}</Button>\n          </div>\n          {event.public_url &&\n            <Button href={event.public_url} variant=\"primary\">Event link</Button>}\n          <Button href={event.private_url} variant=\"primary\" className='ms-2'>Hacker link</Button>\n          <div className='show-more'>\n          <EventModal key={event.id} id={event.id} setEventTypeFilter={setEventTypeFilter} btnText=\"Show More\" />\n          </div>\n        </Card.Body>\n      </Card>\n  );\n}\n\nexport default EventCard;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\ninterface SearchProps {\n  searchQuery: string;\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst Searchbar = ({ searchQuery, setSearchQuery }: SearchProps) => {\n  return (\n    <Form action=\"/\" method=\"get\">\n      <Row className=\"align-items-center\">\n        <Col sm={20}>\n          <Form.Group>\n            <Form.Control type=\"text\" placeholder=\"Search Events\" value={searchQuery} onInput={e => setSearchQuery((e.target as HTMLTextAreaElement).value)} name=\"s\" />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Button variant=\"primary\" type=\"submit\">Submit</Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default Searchbar;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\ninterface LoginProps {\n\tsetEmail: React.Dispatch<React.SetStateAction<string>>;\n\tsetPassword: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst LoginModal = ({ setEmail, setPassword }: LoginProps) => {\n\tconst [show, setShow] = React.useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\tlet email: string;\n\tlet password: string;\n\tconst submitForm = () => {\n\t\tsetEmail(email);\n\t\tsetPassword(password);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Button variant=\"primary\" onClick={handleShow}>\n\t\t\t\tLog In\n\t\t\t</Button>\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Log In</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter email\" onInput={e => email = (e.target as HTMLTextAreaElement).value} />\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" onInput={e => password = (e.target as HTMLTextAreaElement).value} />\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"primary\" onClick={submitForm}>\n\t\t\t\t\t\tLog In\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n\nexport default LoginModal;","import React from 'react';\nimport './Events.css';\nimport axios from 'axios';\nimport EventCard from './EventCard'\nimport Searchbar from './Searchbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport LoginModal from './LoginModal';\nimport Button from 'react-bootstrap/Button';\nimport NavBar from 'react-bootstrap/NavBar';\nimport Container from 'react-bootstrap/Container';\nimport { TailSpin } from 'react-loader-spinner';\nimport logo from \"./htn_logo.png\"\nimport Image from 'react-bootstrap/Image';\n\nexport type TEventType = \"workshop\" | \"activity\" | \"tech_talk\";\ntype TPermission = \"public\" | \"private\";\n\ntype TSpeaker = {\n  name: string;\n  profile_pic?: string;\n};\n\nexport type TEvent = {\n  id: number;\n  name: string;\n  event_type: TEventType;\n  permission?: TPermission;\n\n  start_time: number;\n  end_time: number;\n\n  description?: string;\n  speakers: TSpeaker[];\n\n  public_url?: string;\n  private_url: string;\n  related_events: number[];\n};\n\nexport type TEndpointResponse = TEvent | TEvent[];\n\nconst Events = () => {\n  const [loading, setLoading] = React.useState(true);\n  const [eventReponse, setEvents] = React.useState<TEndpointResponse>([]);\n  const fetchEvents = async () => {\n    axios.get(`https://api.hackthenorth.com/v3/events`)\n      .then((res) => {\n        setEvents(res.data);\n        setLoading(false);\n      })\n      .catch(err => console.error(`Error: ${err}`));\n  }\n\n  let events: TEvent[];\n\n  if (eventReponse.constructor !== Array) {\n    events = [eventReponse as TEvent];\n  } else {\n    events = eventReponse;\n  }\n\n  // sort by start time\n  events.sort((a: TEvent, b: TEvent) => { return a.start_time - b.start_time; });\n\n  // search query\n  const { search } = window.location;\n  const query = new URLSearchParams(search).get('s');\n  const [searchQuery, setSearchQuery] = React.useState(query || '');\n  events = events.filter((ev) => {\n    return ev.name.toLowerCase().includes(searchQuery);\n  });\n\n  // log in stuff\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  let isLoggedIn = email === \"email@email.com\" && password === \"password\";\n  if (!isLoggedIn) {\n    events = events.filter((ev) => {\n      return ev.permission && ev.permission === \"public\";\n    });\n  }\n\n  // filter event type\n  const [eventTypeFilter, setEventTypeFilter] = React.useState<TEventType>();\n  events = events.filter((ev) => {\n    return !eventTypeFilter || ev.event_type === eventTypeFilter;\n  });\n\n  React.useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  return (\n    <div>\n      <NavBar bg='dark' sticky='top'>\n        <Container>\n          <NavBar.Brand>\n            <div className='logo'>\n              <Image\n                alt=\"\"\n                src={logo}\n                width=\"30\"\n                height=\"30\"\n              />\n              <h4 className='white'>Hack The North</h4>\n            </div>\n          </NavBar.Brand>\n          <NavBar.Collapse className=\"justify-content-center\">\n            <Searchbar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n          </NavBar.Collapse>\n          <NavBar.Collapse className=\"justify-content-end\">\n            <LoginModal setEmail={setEmail} setPassword={setPassword} />\n          </NavBar.Collapse>\n        </Container>\n      </NavBar>\n      {eventTypeFilter &&\n        <Button onClick={() => setEventTypeFilter(undefined)} className='m-2'>Reset Filters</Button>}\n      {loading\n        ? <div className='center'><TailSpin color='blue'/></div>\n        : <Row xs={1} md={2} lg={4} className=\"mt-4 m-1\">\n          {events.map((ev, i) => { return (<Col><EventCard event={ev} key={i} setEventTypeFilter={setEventTypeFilter} /></Col>); })}\n        </Row>}\n    </div>\n  );\n}\n\nexport default Events;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Events from './Events';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Events />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/htn_logo.9bc0fd5e.png\";"],"sourceRoot":""}